type Descriptor {
	unit: String!
	value: Float!
	longitude: Float!
	latitude: Float!
	unixTimestamp: Float!
}

extend type Query {
	getValuesForUnit(unit: String!): [Descriptor!]!
	getAllAvailableUnits: [String!]!
	getLatestUnitValue(unit: String!): Float!
	getLengthOfDescriptor(unit: String!): Int!
	getPaginatedDescriptors(
		unit: String!
		start: Int!
		count: Int!
	): [Descriptor!]!
}

extend type Mutation {
	insertValue(
		unit: String!
		value: Float!
		longitude: Float
		latitude: Float
	): String!
}

enum TransactionResponse {
	TRANSACTION_HASH
	CONFIRMATION
	RECIEPT
	ERROR
}

type InsertValueResponse {
	transactionHash: String!
	responseType: TransactionResponse!
	message: String!
}

extend type Subscription {
	insertValueSubscription: InsertValueResponse!
}
